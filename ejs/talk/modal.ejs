<div class='ui long scrolling modal talk'>
  <div class='header'>
    Обмен <% /* this.DeferRender(['cp/adv/imagelink', this.adv]) */ %>
  </div>
  <div class='content'>
    <div class='messages'>
      <div class='ui comments offer'>
<%
var images = "";
for (var k in this.offer)
{
  var v = this.offer[k];
  images += phoxy.DeferRender(['cp/adv/imagelink', v], undefined, function()
  {
    this.first().find('img').addClass('tiny').removeClass('fluid');
  })
}

var initial_comment =
{
  uid: this.from,
  message:
  {
    text: 'Предлагаю обменять на одну из вещей: <br>',
    snap: this.snap,
  }
};

this.DeferRender('talk/comment.uid-only', initial_comment, function()
{
  this.first().find('.text').append(images);
});
%>
      </div>
      <div class='old'>
        <%= this.DeferRender(['talk/OnAdv', this.tid]) %>
      </div>
      <div class='new'></div>
    </div>
  <div class='actions'>
      <div class='ui fluid action input'>
        <input>
        <div class='ui positive button send'>
          <i class='envelope icon'></i>
          <span>Отправить</span>
        </div>
      </div>
  </div>
</div>

<%
this.first(function()
{
  this.first()
    .modal
    ({
      onApprove: function()
      {
        var input = __context.first().find('input');
        var message = input.val();
        input.val('');

        phoxy.ApiRequest(['talk/Send', __context.tid, message], function()
        {
          var render_task = phoxy.DeferRender(['talk/OnAdv', __context.tid]);
          __context.first().find('.messages .old').html(render_task);
        });

        return false;
      },
      onHidden: function()
      {
        __context.first().remove();
      }
    })
    .modal('show');

  var send = this.first().find('.send.button');
  send.click(function()
  {
    send.addClass('active');
    phoxy.Defer(function()
    {
      send.removeClass('active');
    }, 1000);
  })

  for ($i = 0; $i < 2000; $i+= 200)
    phoxy.Defer(function() {__context.first().modal('refresh')}, $i);

})
%>